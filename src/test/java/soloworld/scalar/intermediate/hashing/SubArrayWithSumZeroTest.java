package soloworld.scalar.intermediate.hashing;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class SubArrayWithSumZeroTest {

    private SubArrayWithSumZero subArrayWithSumZero;


    @BeforeEach
    void setUp() {
        subArrayWithSumZero = new SubArrayWithSumZero();
    }


    @Test
    void test1() {
        var input = new int[] { -959, 9, -634, 88, 599, -806, -158, 759, -167, 658, 662, -93, 957, -372, 115, 50, 110, -603, 340, -492, 367, 218, -885, -746, -448, 417, -301, 622, 229, 196, -602, 344, -429, -534, 545, -806, 940, 173, -686, -508, 956, -926, 460, -840, -408, 673, -569, -334, 421, 112, -415, 201, -516, 237, -781, 727, 516, -253, -953, 172, -822, 364, -645, 968, -115, 320, -395, -643, -672, -922, -505, 500, -649, 188, -366, 207, 13, -565, -133, -610, -202, 67, 43, 737, -214, -283, -460, -19, 322, 926, 230, 238, 183, 644, 715, -713, -353, -52, -331, 474, -97, -636, 886, -95, 268, -370, 245, 25, -599, 533, -760, 329, -717, -474, 918, -64, -894, -760, 127, 106, 435, 702, 839, 0 };
        int zero = subArrayWithSumZero.isZero(input);
        assertEquals(1,zero);
    }
    @Test
    void test11() {
        var input = new int[] { -277, 287, -585, -495, 244, -224, -636, 394, -336, 49, -912, -942, -948, 324, -965, -835, -471, -992, 82, 337, -856, 731, -676, 368, 647, 56, -667, 765, -985, 560, -818, 608, 78, 268, 384, 706, -761, 620, 23, -174, 449, 36, 869, -941, -901, 745, -23, 839, -645, 573, 72, -565, 724, 477, -9, -937, -969, 413, -224, -595, 535, 338, 268, -858, 502, -727, 566, 370, 689, -263, 859, -116, -811, 317, 86, -856, -600, 230, -382, -36, -725, 613, 615, 557, -102, -53, -272, -2, -534, -419, 433, -630, 712, -401, 219, 798, 49, -575, 212, -597, 268, -478, 410, -194, 915, 274, -81, 184, 843, -268, -177, -812, 695, -720, -35, -2, 736, -516, -399, -323, -306, 620, 953, 679, -373, -700, -16, 767, -235, -45, 408, -9, 408, -942, 873, -374, 803, -113, -442, -38, -901, -694, -985, 446, 18, -177, 945, 11, 608, 736, -127, -378, 655, -630, 164, 222, -311, 685, -680, -430, -695, 160, -482, 624, -452, 261, -244, -984, 486, -827, 132, 822, 970, -422, -396, 727, -201, 360, -513, 827, -596, 436, -169, 375, 781, -621, -820, 447, -64, -734, 425, 4, 577, -934, -513, -917, 512, 150, 446, 997, 118, -557, 237, 282, 388, -231, -350, 927, -560, 223, -745, -101, -828, -935, 906, 374, -552, 87, 498, -774, 406, 104, -739, 322, 801, -978, 443, 933, 39, -453, 39, 818, 267, -936, -276, 487, 640, -206, -532, 412, -421, 955, -481, 251, -976, 314, -18, -818, -171, -823, -381, -848, 319, -627, 366, -211, 513, 29, 355, 509, -522, -414, 929, 610, -149, -39, 61, 297, -583, 963, -118, 450, 841, 228, -400, 713, -902, 757, -994, -6, 35, 858, -23, 845, 492, -178, -131, -665, 985, 950, -385, -970, -416, -286, 397, -550, 732, 763, 302, 29, -899, -746, 94, -40, 288, -438, -637, 591, -906, -210, 680, 31, 509, -275, 103, -475, 69, 877, -548, -227, -740, 57, -973, 890, -190, 605, -842, -24, 326, -194, 930, -632, -421, -699, 656, 552, 927, -636, -663, -525, -167, -169, -837, 509, -693, 102, 386, 661, 138, 228, -610, 843, 275, 341, 643, 929, 443, 875, -678, 165, -884, 933, -65, 74, -628, 963, 964, -563, 809, 409, 702, 130, -295, -536, 820, 666, -68, 196, -72, -866, -301, 334, -586, 888, -800, 865, 192, 815, -567, 164, -379, -673, -971, 883, 857, -706, -174, -962, 110, 57, -955, -140, 961, 419, 495, -213, 685, -990, 960, 757, -163, -194, -881, -612, 816, 721, 716, 30, -6, 218, -523, 734, -861, 607, 328, -800, -683, -634, -188, -518, 237, -809, 319, -197, 109, -259, -300, -760, -551, -933, 180, 222, -986, 568, 74, 783, -952, -4, 758, -641, 381, 497, -419, -457, -458, -33, 987, 632, 71, 126, 924, 113, 389, 584, -112, 266, -709, -39, -645, 953, 934, -386, -771, 372, 450, -98, -1, -935, 838, 77, 784, -233, -394, 879, -861, 846, -196, -310, 586, 26, 541, -286 };
        int zero = subArrayWithSumZero.isZero(input);
        assertEquals(1,zero);
    }
}